GIT HomeWork 1


 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

JSON
 4. Создать внешний репозиторий c названием HomeWork_Git_JSON.		---->	Заходим на сайт github.com в свою учетную запись. Далее "Your profile" - "Repositories" - "New" - Вводим название и необходимые настройки - "Create repository"
 5. Клонировать репозиторий HomeWork_Git_JSON на локальный компьютер.	---->	git clone link(ссылка на внешний репозиторий)
 6. Внутри локального HomeWork_Git_JSON создать файл “new.json”.	---->	$ cd HomeWork_Git_JSON/(заходим в папку клонированного внешнего репозитория)
									     	$ touch new.json	
 6.1. Внутри локального HomeWork_Git_JSON создать файл “new.json”.	---->	$ touch HomeWork_Git_JSON/new.json
 7. Добавить файл под гит.						---->	$ git add new.json
 8. Закоммитить файл.							---->	$ git commit -m "add_file"
 9. Отправить файл на внешний GitHub репозиторий.			---->	$ git push
 10. Отредактировать содержание файла “new.json” - написать 		---->	$ vim new.json (В редакторе заполняем необходимую информацию, сохраняем и выходим из редактора)
	информацию о себе (ФИО, возраст, количество домашних 
	животных, будущая желаемая зарплата). Всё написать 
	в формате JSON.
 11. Отправить изменения на внешний репозиторий.			----> 	$ git commit -am "changes"
									     	$ git push
 12. Создать файл preferences.json					----> 	$ touch preferences.json
 13. В файл preferences.json добавить информацию о своих 		---->	$ vim preferences.json (В редакторе заполняем необходимую информацию, сохраняем и выходим из редактора)
	предпочтениях (Любимый фильм, любимый сериал, любимая еда,
	любимое время года, сторона которую хотели бы посетить) 
	в формате JSON.
 14. Создать файл sklls.json добавить информацию о скиллах которые 	----> 	$ cat > skills.json
	будут изучены на курсе в формате JSON				     	{
 										       "Skills" : ["Terminal Linux", "GitBush", "HTTP Methods", "JSON", "XML", "API",
              									          "POSTMAN", "DevTools", "Charles", "Fidler", "JMeter", "SQL"]
									      	}
 15. Отправить сразу 2 файла на внешний репозиторий.			---->	$ git add preferences.json skills.json
										$ git commit -m "add_2_files"
										$ git push
 16. На веб интерфейсе создать файл bug_report.json.			---->	"Add new file" - "Create new file" -  В поле "Name your file..." вводим bud_report.json - "Commit new file"
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.	---->	Нажать на файл "bug_report.json" - Далее "Edit this file" - Написать что-нибудь внутри файла (Например: 123) - "Commit changes"
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить 	---->	Нажать на файл "bug_report.json" - Далее "Edit this file" - 
	баг репорт в формате JSON.						{
  											"ID" : "Bug ID",
   											"Summary" : "Short description of the bug",
											"Environment" : "Link to the build/version of Software and all of the environment",
											"Steps to reproduce" : "Full and detailed list of steps to reproduce",
											"Expected result" : "What result should have been without error",
											"Actual result" : "What was the actual result",
											"Attachments" : "Logs, screenshots, video"
										}
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.	---->	Нажать "Commit changes"
 20. Синхронизировать внешний и локальный репозиторий HomeWork_Git_JSON ---->	$ git pull